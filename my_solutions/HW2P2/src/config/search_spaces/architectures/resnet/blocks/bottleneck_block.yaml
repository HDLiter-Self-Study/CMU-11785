# ResNet Bottleneck Block configuration
# @package blocks.bottleneck

name: "BottleneckBlock"
description: "Bottleneck residual block with 1x1-3x3-1x1 conv layers"

# Bottleneck block specific parameters
params:
  activation:
    param_name: "bottleneck_activation"
    type: "categorical"
    choices: ["relu", "gelu", "swish", "leaky_relu", "elu", "mish"]
    description: "Activation function for bottleneck blocks"
    
  normalization:
    param_name: "bottleneck_normalization"
    type: "categorical"
    choices: ["batch_norm", "group_norm", "layer_norm", "instance_norm"]
    description: "Normalization method for bottleneck blocks"
    
  dropout_rate:
    param_name: "bottleneck_dropout_rate"
    type: "float"
    min: 0.0
    max: 0.4
    description: "Dropout rate in bottleneck blocks"
    
  # Bottleneck specific options
  expansion_ratio:
    param_name: "bottleneck_expansion"
    type: "int"
    min: 2
    max: 8
    description: "Expansion ratio for bottleneck blocks"
    
  mid_activation:
    param_name: "bottleneck_mid_activation"
    type: "categorical"
    choices: ["same", "relu", "gelu", "swish"]
    description: "Middle layer activation (same = use main activation)"
    
  # Advanced bottleneck options
  use_zero_init:
    param_name: "bottleneck_zero_init"
    type: "categorical"
    choices: [true, false]
    description: "Zero initialize final batch norm"
    
  use_se:
    param_name: "bottleneck_use_se"
    type: "categorical"
    choices: [true, false]
    description: "Whether to add SE module to bottleneck blocks"
    
  se_ratio:
    param_name: "bottleneck_se_ratio"
    type: "int"
    min: 4
    max: 32
    description: "SE reduction ratio for bottleneck blocks"
    condition: "bottleneck_use_se == true"
    
  # Convolution variants
  use_depthwise:
    param_name: "bottleneck_depthwise"
    type: "categorical"
    choices: [true, false]
    description: "Use depthwise separable conv in middle layer"

# Block-specific parameter estimation
parameter_estimation:
  base_params: 147456  # Approximate params for bottleneck block
  expansion_scaling: 1.2
  se_overhead: 0.015
