# ConvNeXt Architecture Configuration
# @package architectures.convnext

defaults:
  - _self_
  - blocks/convnext_block@blocks.convnext_block
  - blocks/convnext_stem@blocks.convnext_stem

# =============================================================================
# CONVNEXT ARCHITECTURE CONFIGURATION
# =============================================================================
convnext:
  class: "strategy"

  # Meta-configuration: manually set by researcher (not searched)
  strategy_level: "robust"  # ["basic", "robust", "comprehensive", "custom"]

  # Basic structure configuration
  structure_params:
    class: "technique"
    
    # Block type selection (ConvNeXt only uses inverted bottleneck blocks)
    block_type:
      class: "param"
      param_name: "convnext_block_type"
      type: "categorical"
      choices: ["inverted_bottleneck"]
      description: "Type of ConvNeXt block (only inverted bottleneck supported)"

  # Activation configuration with granularity control
  activation_params:
    class: "technique"
    
    selection:
      class: "param"
      param_name: "convnext_activation_granularity"
      type: "categorical"
      dependency_order: ["strategy_level"]
      choices:
        basic: ["global"]
        robust: ["global", "block_type"]
        comprehensive: ["global", "block_type", "stage"]
        custom: ["global", "block_type", "stage", "block_stage"]
      description: "Granularity level for activation function control"
    
    # Global activation (used when granularity = "global" or "stage")
    global_activation:
      class: "param"
      param_name: "convnext_global_activation"
      type: "categorical"
      choices: ["gelu", "relu", "swish", "silu", "leaky_relu", "elu", "mish"]
      description: "Global activation function for entire network"
      condition: "$convnext_activation_granularity in ['global', 'stage']"
    
    # Block-type specific activations (used when granularity = "block_type" or "block_stage")
    inverted_bottleneck_activation:
      class: "param"
      param_name: "convnext_inverted_bottleneck_activation"
      type: "categorical"
      choices: ["gelu", "relu", "swish", "silu", "leaky_relu", "elu", "mish"]
      description: "Activation function for inverted bottleneck blocks"
      condition: "$convnext_activation_granularity in ['block_type', 'block_stage']"

  # Normalization configuration with granularity control
  normalization_params:
    class: "technique"
    
    selection:
      class: "param"
      param_name: "convnext_norm_granularity"
      type: "categorical"
      dependency_order: ["strategy_level"]
      choices:
        basic: ["global"]
        robust: ["global", "block_type"]
        comprehensive: ["global", "block_type", "stage"]
        custom: ["global", "block_type", "stage", "block_stage"]
      description: "Granularity level for normalization method control"
    
    # Global normalization (used when granularity = "global" or "stage")
    global_normalization:
      class: "param"
      param_name: "convnext_global_normalization"
      type: "categorical"
      choices: ["layer_norm", "batch_norm", "group_norm"]
      description: "Global normalization method for entire network"
      condition: "$convnext_norm_granularity in ['global', 'stage']"
    
    # Block-type specific normalizations (used when granularity = "block_type" or "block_stage")
    inverted_bottleneck_normalization:
      class: "param"
      param_name: "convnext_inverted_bottleneck_normalization"
      type: "categorical"
      choices: ["layer_norm", "batch_norm", "group_norm"]
      description: "Normalization method for inverted bottleneck blocks"
      condition: "$convnext_norm_granularity in ['block_type', 'block_stage']"

  # Advanced ConvNeXt features (architecture-specific only)
  advanced_params:
    class: "technique"
    
    # Projection type for shortcut connections when dimensions mismatch
    projection_type:
      class: "param"
      param_name: "convnext_projection_type"
      type: "categorical"
      choices: ["conv", "avg_pool", "max_pool"]
      description: "Shortcut projection method when dimensions mismatch"
